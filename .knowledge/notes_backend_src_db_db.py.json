{"is_source_file": true, "format": "Python", "description": "This file sets up database connectivity for a Python project using SQLAlchemy. It loads environment variables, checks for the DATABASE_URL, creates an engine, and defines a function to provide database sessions typically used in dependency injection frameworks like FastAPI.", "external_files": [".env", ".env.example"], "external_methods": ["load_dotenv", "create_engine", "sessionmaker", "os.environ.get", "db.close"], "published": ["get_db"], "classes": [], "methods": [{"name": "get_db()", "description": "Provides a database session for dependency injection, ensuring the session is properly closed after use.", "scope": "", "scopeKind": ""}], "calls": ["load_dotenv", "os.environ.get", "create_engine", "sessionmaker", "db.close"], "search-terms": ["SQLAlchemy engine", "database connection", "dependency injection", "FastAPI database", "session management"], "state": 2, "file_id": 6, "knowledge_revision": 14, "git_revision": "", "ctags": [{"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/db.py", "pattern": "/^DATABASE_URL = os.environ.get(\"DATABASE_URL\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/db.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/db.py", "pattern": "/^engine = create_engine(DATABASE_URL, echo=False, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/db.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "de3b977e1defb2703e927005b740777a", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/db/db.py", "fields": [{"name": "DATABASE_URL = os.environ.get(\"DATABASE_URL\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=engine)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "engine = create_engine(DATABASE_URL, echo=False, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"14": ""}]}