{"is_source_file": true, "format": "Python", "description": "This file defines the core API components of a note management system using FastAPI. It includes schema definitions for users and notes, security utilities like JWT authentication, and CRUD operations for users and notes.", "external_files": ["src/db/models", "src/db/db"], "external_methods": ["get_db", "User", "Note"], "published": ["UserCreate", "UserRead", "Token", "NoteBase", "NoteCreate", "NoteUpdate", "NoteRead", "get_password_hash", "verify_password", "authenticate_user", "create_access_token", "get_current_user", "create_user", "get_user_by_id", "get_user_by_email", "create_note", "get_notes", "get_note", "update_note", "delete_note"], "classes": [{"name": "UserCreate", "description": "Schema for user creation (signup) input."}, {"name": "UserRead", "description": "Schema for returning user info (without password)."}, {"name": "Token", "description": "Returned when authenticating successfully."}, {"name": "NoteBase", "description": "Base schema for notes."}, {"name": "NoteCreate", "description": "Input schema for creating a note."}, {"name": "NoteUpdate", "description": "Input schema for updating a note."}, {"name": "NoteRead", "description": "Returned data for a note."}], "methods": [{"name": "str get_password_hash(password: str)", "description": "Hash the plain password.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verify password against stored hash.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] authenticate_user(db: Session, email: str, password: str)", "description": "Authenticate user by email and password.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(data: dict, expires_delta: Optional[datetime.timedelta] = None)", "description": "Generate a secure JWT access token.", "scope": "", "scopeKind": ""}, {"name": "User get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))", "description": "Get current user from JWT token, fails with 401 if invalid.", "scope": "", "scopeKind": ""}, {"name": "User create_user(db: Session, user: UserCreate)", "description": "Create a new user, raises HTTPException if email taken.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_id(db: Session, user_id: int)", "description": "Get a user by ID, or None if not found.", "scope": "", "scopeKind": ""}, {"name": "Optional[User] get_user_by_email(db: Session, email: str)", "description": "Get a user by email address.", "scope": "", "scopeKind": ""}, {"name": "Note create_note(db: Session, user: User, note: NoteCreate)", "description": "Create a note for the authenticated user.", "scope": "", "scopeKind": ""}, {"name": "List[Note] get_notes(db: Session, user: User, skip=0, limit=100, search: Optional[str]=None)", "description": "List notes owned by the user, optionally search by title/content.", "scope": "", "scopeKind": ""}, {"name": "Note get_note(db: Session, user: User, note_id: int)", "description": "Get a single note owned by user, raises 404 if not found or not theirs.", "scope": "", "scopeKind": ""}, {"name": "Note update_note(db: Session, user: User, note_id: int, note_update: NoteUpdate)", "description": "Update a note (must be owned by current user).", "scope": "", "scopeKind": ""}, {"name": "delete_note(db: Session, user: User, note_id: int)", "description": "Remove a note. Raises 404 if not found, 403 if not user's.", "scope": "", "scopeKind": ""}], "calls": ["jwt.decode", "db.query(User).filter", "db.query(Note).filter"], "search-terms": ["FastAPI security", "JWT authentication", "user schema", "note schema", "CRUD operations", "JWT_SECRET_KEY", "JWT_ALGORITHM", "OAuth2PasswordBearer", "orm_mode"], "state": 2, "file_id": 11, "knowledge_revision": 24, "git_revision": "", "ctags": [{"_type": "tag", "name": "ACCESS_TOKEN_EXPIRE_MINUTES", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", 60))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "ALGORITHM", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^ALGORITHM = os.environ.get(\"JWT_ALGORITHM\", \"HS256\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "NoteRead", "scopeKind": "class"}, {"_type": "tag", "name": "Config", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^    class Config:$/", "language": "Python", "kind": "class", "scope": "UserRead", "scopeKind": "class"}, {"_type": "tag", "name": "NoteBase", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class NoteBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteCreate", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class NoteCreate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteRead", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class NoteRead(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "NoteUpdate", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class NoteUpdate(NoteBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SECRET_KEY", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^SECRET_KEY = os.environ.get(\"JWT_SECRET_KEY\", \"notsosecret\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Token", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class Token(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserCreate", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class UserCreate(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserRead", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^class UserRead(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def authenticate_user(db: Session, email: str, password: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str, password: str)"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^    content: Optional[str] = \"\"$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "NoteBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def create_access_token(data: dict, expires_delta: Optional[datetime.timedelta] = None) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(data: dict, expires_delta: Optional[datetime.timedelta] = None)"}, {"_type": "tag", "name": "create_note", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def create_note(db: Session, user: User, note: NoteCreate) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(db: Session, user: User, note: NoteCreate)"}, {"_type": "tag", "name": "create_user", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def create_user(db: Session, user: UserCreate) -> User:$/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session, user: UserCreate)"}, {"_type": "tag", "name": "delete_note", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def delete_note(db: Session, user: User, note_id: int):$/", "language": "Python", "kind": "function", "signature": "(db: Session, user: User, note_id: int)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def get_current_user(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme)) -> User/", "language": "Python", "typeref": "typename:User", "kind": "function", "signature": "(db: Session = Depends(get_db), token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_note", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def get_note(db: Session, user: User, note_id: int) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(db: Session, user: User, note_id: int)"}, {"_type": "tag", "name": "get_notes", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def get_notes(db: Session, user: User, skip=0, limit=100, search: Optional[str]=None) -> List[No/", "language": "Python", "typeref": "typename:List[Note]", "kind": "function", "signature": "(db: Session, user: User, skip=0, limit=100, search: Optional[str]=None)"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "get_user_by_email", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def get_user_by_email(db: Session, email: str) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, email: str)"}, {"_type": "tag", "name": "get_user_by_id", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def get_user_by_id(db: Session, user_id: int) -> Optional[User]:$/", "language": "Python", "typeref": "typename:Optional[User]", "kind": "function", "signature": "(db: Session, user_id: int)"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/token\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "NoteRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "orm_mode", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^        orm_mode = True$/", "language": "Python", "kind": "variable", "scope": "UserRead.Config", "scopeKind": "class"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^    password: str = Field(..., min_length=6)$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserCreate", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_note", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def update_note(db: Session, user: User, note_id: int, note_update: NoteUpdate) -> Note:$/", "language": "Python", "typeref": "typename:Note", "kind": "function", "signature": "(db: Session, user: User, note_id: int, note_update: NoteUpdate)"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/api/core.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "6c69459ef738d632ab9e86f3d5882d10", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/api/core.py", "fields": [{"name": "ACCESS_TOKEN_EXPIRE_MINUTES = int(os.environ.get(\"JWT_ACCESS_TOKEN_EXPIRE_MINUTES\", 60))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "ALGORITHM = os.environ.get(\"JWT_ALGORITHM\", \"HS256\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SECRET_KEY = os.environ.get(\"JWT_SECRET_KEY\", \"notsosecret\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "Optional[str] content", "scope": "NoteBase", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"auth\\/token\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "orm_mode = True", "scope": "NoteRead.Config", "scopeKind": "class", "description": "unavailable"}, {"name": "str password", "scope": "UserCreate", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"24": ""}]}