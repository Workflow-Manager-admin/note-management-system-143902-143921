{"is_source_file": true, "format": "Python (SQLAlchemy ORM model definitions)", "description": "Defines database models for User and Note entities in a notes management system, using SQLAlchemy ORM.", "external_files": [], "external_methods": ["datetime.datetime.utcnow"], "published": ["User", "Note"], "classes": [{"name": "User", "description": "Database model representing a user, with attributes for id, email, password hash, creation timestamp, and relationship to notes."}, {"name": "Note", "description": "Database model representing a note, with attributes for id, title, content, timestamps, foreign key to User, and relationship to owner."}], "methods": [{"name": "User", "description": "Constructor for User model (auto-generated by SQLAlchemy)."}, {"name": "Note", "description": "Constructor for Note model (auto-generated by SQLAlchemy)."}], "calls": ["datetime.datetime.utcnow"], "search-terms": ["SQLAlchemy models", "User class", "Note class", "notes database", "ORM models", "notes backend", "models.py"], "state": 2, "file_id": 5, "knowledge_revision": 11, "git_revision": "", "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Note", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^class Note(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    __tablename__ = \"notes\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    content = Column(Text, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    created_at = Column(DateTime, default=datetime.datetime.utcnow, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    created_at = Column(DateTime, default=datetime.datetime.utcnow, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    email = Column(String, unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    notes = relationship(\"Note\", back_populates=\"owner\", cascade=\"all, delete-orphan\")$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "owner", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    owner = relationship(\"User\", back_populates=\"notes\")$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "password_hash", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    password_hash = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    title = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "updated_at", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    updated_at = Column(DateTime, default=datetime.datetime.utcnow, onupdate=datetime.datetime.u/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/note-management-system-143902-143921/notes_backend/src/db/models.py", "pattern": "/^    user_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Note", "scopeKind": "class"}], "hash": "741cc40900ecabbebd8a52c088864cb3", "format-version": 4, "code-base-name": "notes_backend", "filename": "notes_backend/src/db/models.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"notes\"", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "content = Column(Text, nullable=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = Column(DateTime, default=datetime.datetime.utcnow, nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "email = Column(String, unique=True, index=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "notes = relationship(\"Note\", back_populates=\"owner\", cascade=\"all, delete-orphan\")", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "owner = relationship(\"User\", back_populates=\"notes\")", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "password_hash = Column(String, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "title = Column(String, nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "updated_at = Column(DateTime, default=datetime.datetime.utcnow, onupdate=datetime.datetime.u/", "scope": "Note", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)", "scope": "Note", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"11": ""}]}